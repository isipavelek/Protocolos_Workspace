/// @file API_LCD.c
/// @version 1.0
/// @date 23/4/2023
/// @author Ing. Pavelek Israel
/// @title API de manejo del LCD de alto nivel
/// @brief funciones lcd.c



#include "API_lcd.h"
#include "API_Lcd_port.h"
#include "API_delay.h"
#include "API_I2C.h"

static void DelayLcd(uint32_t demora);
static void ControlLcd(uint8_t valor);
static void Envia8bitsLcd (uint8_t valor,_Bool tipo);
static void Envia4bitsLcd (uint8_t valor,_Bool tipo);

static const uint8_t LCD_INIT_CMD[]={
		_4BIT_MODE,DISPLAY_CONTROL,RETURN_HOME,ENTRY_MODE+AUTOINCREMENT,DISPLAY_CONTROL+DISPLAY_ON,CLR_LCD
};

/**
  * @brief  Init_Lcd
  * @param  void
  * @return void
  * @author Ing. Pavelek Israel
  * @version 1.0
  * @date 16/4/2023
*/


_Bool Init_Lcd(void){

   if(I2C_HW_init()==LCD_ERROR)return LCD_ERROR;
   DelayLcd(DELAY20ms);
   Envia4bitsLcd(COMANDO_INI1,CONTROL);
   DelayLcd(DELAY10ms);
   Envia4bitsLcd(COMANDO_INI1,CONTROL);
   DelayLcd(DELAY1ms);
   Envia4bitsLcd(COMANDO_INI1,CONTROL);
   Envia4bitsLcd(COMANDO_INI2,CONTROL);
   for(uint8_t i=0;i<sizeof(LCD_INIT_CMD);i++)ControlLcd(LCD_INIT_CMD[i]);
   DelayLcd(DELAY2ms);
   return LCD_OK;

}

/********************************************************************************
 *Funcion: DelayLcd
 * Acción: demora bloqueante del LCD
 * Recibe: valor a demorar en ms
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

static void DelayLcd(uint32_t demora){
	  HAL_Delay(demora);
}

/********************************************************************************
 *Funcion:ControlLcd
 * Acción: Envia un valor de CONTROL al LCD
 * Recibe: valor a enviar
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

static void ControlLcd(uint8_t valor){
	Envia8bitsLcd(valor,CONTROL);
}

/********************************************************************************
 *Funcion:DatoLcd
 * Acción:Envia un valor de DATOS al LCD
 * Recibe: valor a enviar
 * Devuelve: Nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void DatoLcd (uint8_t dato){
	Envia8bitsLcd(dato,DATOS);
}
/********************************************************************************
 *Funcion:DatoAsciiLcd
 * Acción:Función que convierte a ASCII un valor y lo pone en el LCD
 * Recibe: valor a poner en el LCD
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void DatoAsciiLcd (uint8_t dato){
	Envia8bitsLcd(dato+ '0',DATOS);
}

/********************************************************************************
 *Funcion:DatoAsciiLcd
 * Acción:Función que envia al LCD un valor en BCD
 * Recibe: valor a poner en el LCD
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void DatoBCD (uint8_t dato){

	  DatoAsciiLcd((((dato)&0xf0)>>4));
	  DatoAsciiLcd(((dato)&0x0f));

}

/********************************************************************************
 *Funcion:Send8bitsLcd
 * Acción: Función que parte el envio de 1 byte en nible alto y bajo para el trabajo en 4 bits
 * Recibe: valor a enviar, y tipo: CONTROl O DATOS
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void Envia8bitsLcd (uint8_t valor,_Bool tipo){
	Envia4bitsLcd(valor&HIGH_NIBBLE,tipo); 		//me con quedo y envio los 4 bits más significaticos.
	Envia4bitsLcd(valor<<LOW_NIBBLE,tipo);   	//me quedo y envio los 4 bits menos significativos.
}

/********************************************************************************
 *Funcion: Send4bitsLcd
 * Acción: Funciòn que envia concretamente el valor (4bits) al LCD
 * Recibe: valor a enviar, y tipo CONTROL o DATOS
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

static void Envia4bitsLcd (uint8_t valor,_Bool tipo){

	LCD_Write_Byte(valor+tipo+EN+BL);
	DelayLcd(DelayTime);
	LCD_Write_Byte(valor+tipo+BL);
	DelayLcd(DelayTime);
}

/********************************************************************************
 *Funcion:OutTextLcd
 * Acción: FUnciòn que envia un texto al LCD
 * Recibe: Puntero a string a enviar
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/


void SacaTextoLcd (uint8_t *texto){
	while(*texto)DatoLcd(*texto++);
}

/********************************************************************************
 *Funcion:ClrLcd
 * Acción: Función que borra el LCD
 * Recibe: nada
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void ClrLcd(void){
   ControlLcd(CLR_LCD);				//	Display Clear.
   DelayLcd(DELAY2ms);

}

/********************************************************************************
 *Funcion:PosCaracHLcd
 * Acción:Función que posiciona el cursor del LCD en la linea superior.
 * Recibe: un valor de 0 a la longitud de la pantalla
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/


void PosCaracHLcd(uint8_t posH){
	ControlLcd(posH | LINEA1);
}

/********************************************************************************
 *PosCaracLLcd
 * Acción:Función que posiciona el cursor del LCD en la linea inferior.
 * Recibe: un valor de 0 a la longitud de la pantalla
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void PosCaracLLcd(uint8_t posL){
	ControlLcd(posL | LINEA2);
}

/********************************************************************************
 *Funcion:CursorOffLcd
 * Acción: Función que apaga el cursor del LCD
 * Recibe: nada
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void CursorOffLcd(void){
	ControlLcd(DISPLAY_CONTROL+DISPLAY_ON);
}

/********************************************************************************
 *Funcion: CursorOnLcd
 * Acción: Función que prende el cursor del LCD
 * Recibe: nada
 * Devuelve: nada
 *
 * Realizada por:Israel Pavelek
 * Version: 1.0
 * Fecha 13/4/23
  *
 **********************************************************************************/

void CursorOnLcd(void){
	ControlLcd(DISPLAY_CONTROL+CURSOR_ON+DISPLAY_ON+CURSOR_BLINK);
}

